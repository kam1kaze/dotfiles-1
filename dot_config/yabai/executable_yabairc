#!/usr/bin/env sh


# bar
ps cax | grep spacebar &> /dev/null
if [ $? -eq 0 ] ; then
    yabai -m config external_bar all:26:0
    yabai -m config top_padding 10
else 
    yabai -m config external_bar all:0:0
    yabai -m config top_padding 10
fi

# set border colors
yabaicolor

# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          autoraise
yabai -m config window_placement             second_child
yabai -m config window_topmost               on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow                off
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.9
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               cmd
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  10
yabai -m config bottom_padding               10
yabai -m config left_padding                 10
yabai -m config right_padding                10
yabai -m config window_gap                   10

# rules
yabai -m rule --add app="^System Preferences$" layer=above manage=off
yabai -m rule --add app="^mupdf-gl$" manage=on

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# delete monocle mode lock files from previous sessions
find "${TMPDIR}" -type f -perm +111 -name "yabai_${USER}_monocle_mode_*" -delete

function focus_under_cursor {
  if yabai -m query --windows --space |
      jq -er 'map(select(.focused == 1)) | length == 0' >/dev/null; then
    yabai -m window --focus mouse 2>/dev/null || true
  fi
}

# If no window on the current space is focused after a window is destroyed or
# minimized, or an application is hidden, focus the window under the cursor.
yabai -m signal --add event=window_destroyed \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=window_minimized \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=application_hidden \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=space_changed \
  action="${functions[focus_under_cursor]}"
yabai -m signal --add event=display_changed \
  action="${functions[focus_under_cursor]}"

# borders
killall limelight &> /dev/null
limelight &> /dev/null &
